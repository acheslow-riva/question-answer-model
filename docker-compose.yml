version: '3'
x-elasticsearch-credentials: &elasticsearch-credentials
  ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
  ELASTIC_PORT: ${ELASTIC_PORT:-9200}
  ELASTIC_HOST: ${ELASTIC_HOST:-localhost}
  ELASTIC_URL: ${ELASTIC_URL:-"http://localhost:9200"}
  ELASTIC_USER: ${ELASTIC_USER:-elastic}
  ELASTIC_INDEX: ${ELASTIC_INDEX}
  QA_INDEX: ${QA_INDEX:-ahrq_qa}

services:
  torch:
    build:
      context: ./docker_build
    working_dir: /transformer_model
    container_name: torch
    environment:
      <<: *elasticsearch-credentials
      FLASK_CONFIG: ${FLASK_CONFIG}
      NEURON_RTD_ADDRESS: "unix:/sock/neuron.sock"
    ports:
      - ${HOST_PORT:-8000}:8000
    volumes:
      - '/tmp/neuron_rtd_sock/:/sock'
      - ./transformer_model:/transformer_model
      - ./docker_build/updated_language_model.py:/usr/local/lib/python3.7/site-packages/farm/modeling/language_model.py
    networks:
      - transformer_net
    depends_on: 
      - neuron-rtd
    restart: always
    entrypoint: flask
    command: deploy

  neuron-rtd:
    build:
      context: ./docker_dependencies
    container_name: neuron-rtd
    devices:
      - "/dev/neuron0"
    cap_add:
      - IPC_LOCK
      - SYS_ADMIN
    volumes:
      - '/tmp/neuron_rtd_sock/:/sock'
    restart: always
  
  update:
    build: 
      context: ./update
    image: dexi-qa-update:latest
    container_name: qa_update
    working_dir: /app/app
    environment:
      <<: *elasticsearch-credentials
      CRON_STRING: "${CRON_STRING}"
    networks:
      - transformer_net
    volumes:
      - ./update/app:/app/app
    restart: always
    command: ["start-cron", "${CRON_STRING}"]

networks:
  transformer_net:
    external: true